class t{constructor(t){this.canvasSize=t,this.pointsWidth=t.width/5;const i=(t=>{const i=[];let s=0;for(let o=0;o<5;o++){const o=s+t;i.push({start:s,end:o}),s+=t}return i})(this.pointsWidth);this.points=i}}let i;var s,o;(o=s||(s={}))[o.LEFT=0]="LEFT",o[o.RIGHT=1]="RIGHT";var e=class{update(){}draw(t){}handleInputDOWN(t){}};var h=class extends e{constructor(t,i){super(),this.positions=t,this.facing=s.RIGHT,this.keyboardMap=i}draw(t){t.save(),t.fillStyle="red";const i=this.facing===s.LEFT?this.positions[0]:this.positions[1];t.fillRect(i.x,i.y,100,100),t.restore()}handleInputDOWN(t){const i=this.keyboardMap[t];i===s.LEFT&&(this.facing=s.LEFT),i===s.RIGHT&&(this.facing=s.RIGHT)}};const n={ArrowLeft:s.LEFT,ArrowRight:s.RIGHT};s.LEFT,s.LEFT,s.RIGHT,s.RIGHT;var a=class{constructor(t,i=!1){if(this.position=t,this.wlSize={width:100,height:100},i)this.branch=s.LEFT;else{const t=Math.floor(2*Math.random())+1;this.branch=1===t?s.LEFT:s.RIGHT}this.branchSize={width:100,height:30}}draw(t){t.save(),t.fillStyle="blue",t.fillRect(this.position.x,this.position.y,this.wlSize.width,this.wlSize.height),t.restore(),t.save(),t.fillStyle="green";const i=this.branch===s.LEFT?this.position.x-this.branchSize.width:this.position.x+this.branchSize.width;t.fillRect(i,this.position.y,this.branchSize.width,this.branchSize.height),t.restore()}};var r=class extends e{constructor(t,s,o=10){super(),this.woodenLogs=((t,s=10)=>{const o=[];for(let e=0;e<s;e++){const s={x:i.points[2].start+i.pointsWidth/2,y:t.height-150-105*e};o.push(new a(s,0===e))}return o})(t,o),this.keyboardMap=s}draw(t){this.woodenLogs.forEach((i=>i.draw(t)))}handleInputDOWN(t){const o=this.keyboardMap[t];if(o===s.LEFT||o===s.RIGHT){this.woodenLogs.shift(),this.woodenLogs.forEach((t=>{t.position.y+=t.wlSize.height+5}));const t={x:i.points[2].start+i.pointsWidth/2,y:i.canvasSize.height-150-945};this.woodenLogs.push(new a(t))}}};window.onload=()=>{const s=document.getElementById("canvas-game"),o=s.getContext("2d"),e={width:s.width,height:s.height};((s={width:800,height:900})=>{i=new t(s)})(e),console.log("The Map is divided horizontally in:",i.points);const a={x:i.points[1].start+i.pointsWidth/2,y:s.height-150},c={x:i.points[3].start+i.pointsWidth/2,y:s.height-150},d=[new h([a,c],n),new r(e,n,10)];let l=0;const w=t=>{const i=(t-l)/1e3;l=t,console.log(i),o.clearRect(0,0,s.width,s.height),d.forEach((t=>t.draw(o))),window.requestAnimationFrame(w)};window.requestAnimationFrame(w),document.body.addEventListener("keydown",(t=>{d.forEach((i=>i.handleInputDOWN(t.key)))}))};
//# sourceMappingURL=index.80992e7f.js.map
