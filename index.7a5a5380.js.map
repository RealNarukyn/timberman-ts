{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-bbd288d235c7b869.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-7fc66137473b4881.js","src/managers/MapManager.ts","src/utils/numbers-frames.ts","node_modules/@parcel/runtime-js/lib/runtime-0baef99d2b5d4692.js","src/managers/GameManager.ts","src/types/positions.ts","src/utils/player-status.ts","src/actors/Actor.ts","node_modules/@parcel/runtime-js/lib/runtime-a7f222ba8293981b.js","node_modules/@parcel/runtime-js/lib/runtime-e6a0f4010505c18a.js","src/actors/Timberman.ts","src/utils/keyboard-map.ts","node_modules/@parcel/runtime-js/lib/runtime-77b3c6dd9474ac89.js","node_modules/@parcel/runtime-js/lib/runtime-01c3a310108e8a79.js","node_modules/@parcel/runtime-js/lib/runtime-36c1f928b67b095e.js","node_modules/@parcel/runtime-js/lib/runtime-64310a0dfce0db3d.js","src/actors/WoodenLog.ts","node_modules/@parcel/runtime-js/lib/runtime-cd626ffcf6f3124f.js","src/actors/Tree.ts","src/actors/FPSviewer.ts","src/index.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"ct2W2\\\":\\\"index.7a5a5380.js\\\",\\\"7FnEd\\\":\\\"background.5a8e4b04.png\\\",\\\"6drKZ\\\":\\\"numbers.2a0ad200.png\\\",\\\"5QlM5\\\":\\\"man.4068a63d.png\\\",\\\"beX4X\\\":\\\"rip.d319d642.png\\\",\\\"hTO6R\\\":\\\"branch1.67354f49.png\\\",\\\"6gu66\\\":\\\"branch2.15a5c345.png\\\",\\\"bNIP3\\\":\\\"trunk1.9b984a50.png\\\",\\\"jcPC9\\\":\\\"trunk2.6b30af00.png\\\",\\\"eBVmE\\\":\\\"stump.3165b42e.png\\\"}\"));","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('ct2W2') + require('./helpers/bundle-manifest').resolve(\"7FnEd\");","import { Size } from '../types/sizes';\n\nconst background = require('../../public/GameResources/img/background.png');\n\nconst getPointsArray = (\n  pointsWidth: number\n): Array<{ start: number; end: number }> => {\n  const pointsHelper: Array<{ start: number; end: number }> = [];\n  let start: number = 0;\n\n  for (let i = 0; i < 5; i++) {\n    const end = start + pointsWidth;\n    pointsHelper.push({ start, end });\n    start += pointsWidth;\n  }\n\n  return pointsHelper;\n};\n\nclass MapManager {\n  canvasSize: Size;\n\n  pointsWidth: number;\n\n  points: Array<{ start: number; end: number }>;\n\n  backgroundImg: HTMLImageElement;\n\n  constructor(canvasSize: Size) {\n    this.canvasSize = canvasSize;\n    this.pointsWidth = canvasSize.width / 5;\n    const pointsHelper: Array<{ start: number; end: number }> = getPointsArray(\n      this.pointsWidth\n    );\n    this.points = pointsHelper;\n\n    this.backgroundImg = new Image();\n    this.backgroundImg.src = background;\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    ctx.drawImage(\n      this.backgroundImg,\n      0,\n      0,\n      this.canvasSize.width,\n      this.canvasSize.height\n    );\n  }\n}\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let mapManager: MapManager;\n\nexport const initMapManager = (\n  canvasSize: Size = { width: 800, height: 900 }\n) => {\n  mapManager = new MapManager(canvasSize);\n};\n","import { NumberFrame } from '../types/numberFrames';\n\nexport const framesNumbers: NumberFrame = {\n  number0: { x: 5, y: 5, w: 66, h: 91 },\n  number1: { x: 81, y: 5, w: 50, h: 91 },\n  number2: { x: 141, y: 5, w: 66, h: 91 },\n  number3: { x: 217, y: 5, w: 66, h: 91 },\n  number4: { x: 293, y: 5, w: 66, h: 91 },\n  number5: { x: 369, y: 5, w: 66, h: 91 },\n  number6: { x: 445, y: 5, w: 66, h: 91 },\n  number7: { x: 521, y: 5, w: 66, h: 91 },\n  number8: { x: 597, y: 5, w: 66, h: 91 },\n  number9: { x: 673, y: 5, w: 66, h: 91 }\n};\n\nexport const framesTimberman: NumberFrame = {\n  breath0: { x: 1059, y: 5, w: 517, h: 403 }, // Breath 1\n  breath1: { x: 1586, y: 5, w: 517, h: 403 }, // Breath 2\n  chop0: { x: 5, y: 5, w: 517, h: 403 }, // Chop 1\n  chop1: { x: 532, y: 5, w: 517, h: 403 } // Chop 2\n};\n","module.exports = require('./helpers/bundle-url').getBundleURL('ct2W2') + require('./helpers/bundle-manifest').resolve(\"6drKZ\");","import { Player } from '../types/player';\nimport { framesNumbers } from '../utils/numbers-frames';\n\nconst numbers = require('../../public/GameResources/img/numbers.png');\n\nclass GameManager {\n  isPlaying: boolean;\n\n  players: Array<Player>;\n\n  pointsImage: HTMLImageElement;\n\n  constructor(players: Array<Player>) {\n    this.isPlaying = true;\n    this.players = players;\n\n    this.pointsImage = new Image();\n    this.pointsImage.src = numbers;\n  }\n\n  update() {\n    this.players.forEach((player: Player) => {\n      // -- Player arrives at 0 Health\n      if (player.timberman.health <= 0) {\n        // this.isPlaying = false;\n        player.timberman.health = 0;\n      }\n\n      // -- Player Collides With Branch\n      if (player.timberman.facing === player.tree.woodenLogs[0].branchFacing) {\n        this.isPlaying = false;\n      }\n    });\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    this.players.forEach((player: Player) => {\n      // #region [ Draw Timberman Health ]\n      ctx.save();\n      ctx.fillStyle = 'orange';\n      ctx.fillRect(\n        player.timberman.healthBarPos.x,\n        player.timberman.healthBarPos.y,\n        player.timberman.health,\n        player.timberman.healthBarSize.height\n      );\n      ctx.restore();\n      // #endregion\n\n      // #region [ Draw Timberman Points ]\n      const strPoints: string[] = player.timberman.points.toString().split('');\n      strPoints.forEach((e, index) => {\n        const curNumber: { x: number; y: number; w: number; h: number } =\n          framesNumbers[`number${e}`];\n\n        ctx.save();\n        ctx.drawImage(\n          this.pointsImage,\n          curNumber.x,\n          curNumber.y,\n          curNumber.w,\n          curNumber.h,\n          player.timberman.pointsPosition.x +\n            index * player.timberman.pointsSize.width,\n          player.timberman.pointsPosition.y,\n          player.timberman.pointsSize.width,\n          player.timberman.pointsSize.height\n        );\n        ctx.restore();\n      });\n      // #endregion\n    });\n  }\n}\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let gameManager: GameManager;\n\nexport const initGameManager = (players: Array<Player>) => {\n  gameManager = new GameManager(players);\n};\n","export interface Position {\n  x: number;\n  y: number;\n}\n\nexport enum facingENUM {\n  // eslint-disable-next-line no-unused-vars\n  LEFT,\n  // eslint-disable-next-line no-unused-vars\n  RIGHT,\n  // eslint-disable-next-line no-unused-vars\n  NONE\n}\n","/* eslint-disable no-unused-vars */\n/* eslint-disable import/prefer-default-export */\nexport enum TimbermanStatus {\n  IDDLE,\n  CHOP,\n  DEAD\n}\n","/* eslint-disable no-unused-vars */\n/* eslint-disable class-methods-use-this */\n\nclass Actor {\n  update(delta: number): void {}\n\n  draw(ctx: CanvasRenderingContext2D, delta: number): void {}\n\n  handleInputDOWN(key: string): void {}\n\n  handleInputUP(key: string): void {}\n}\n\nexport default Actor;\n","module.exports = require('./helpers/bundle-url').getBundleURL('ct2W2') + require('./helpers/bundle-manifest').resolve(\"5QlM5\");","module.exports = require('./helpers/bundle-url').getBundleURL('ct2W2') + require('./helpers/bundle-manifest').resolve(\"beX4X\");","import { mapManager } from '../managers/MapManager';\nimport { Position, facingENUM } from '../types/positions';\nimport { Size } from '../types/sizes';\nimport { KeyboardMap } from '../utils/keyboard-map';\nimport Actor from './Actor';\nimport { framesTimberman } from '../utils/numbers-frames';\nimport { TimbermanStatus } from '../utils/player-status';\n\nconst timbermanSprites = require('../../public/GameResources/img/man.png');\nconst timbermanRIPSprite = require('../../public/GameResources/img/rip.png');\n\nconst HEALTH_DECRESEASE_SPEED: number = 16;\nconst HEALTH_INCRESEASE_SPEED: number = 12;\nconst NUM_SPRITES = 2;\n\nconst createPositionsTM = (canvas: Size, tmSize: Size): Array<Position> => {\n  // -- Left Point\n  let middlePosPoint = mapManager.points[1].start + mapManager.pointsWidth / 2;\n  const tmPosLeft: Position = {\n    x: middlePosPoint - tmSize.width / 2,\n    y: canvas.height - 150 - tmSize.height / 2\n  };\n\n  // -- Right Point\n  middlePosPoint = mapManager.points[3].start + mapManager.pointsWidth / 2;\n  const tmPosRight: Position = {\n    x: middlePosPoint - tmSize.width / 2,\n    y: canvas.height - 150 - tmSize.height / 2\n  };\n\n  return [tmPosLeft, tmPosRight];\n};\n\nclass Timberman extends Actor {\n  tmSize: Size;\n\n  positions: Array<Position>;\n\n  facing: facingENUM;\n\n  keyboardMap: KeyboardMap;\n\n  health: number;\n\n  points: number;\n\n  healthBarPos: Position;\n\n  healthBarSize: Size;\n\n  pointsPosition: Position;\n\n  pointsSize: Size;\n\n  timbermanImage: HTMLImageElement;\n\n  timbermanDeadImage: HTMLImageElement;\n\n  timbermanStatus: TimbermanStatus;\n\n  animationCount: number;\n\n  time: number;\n\n  constructor(\n    canvasSize: Size,\n    healthPos: Position,\n    pointsPos: Position,\n    keyboardMap: KeyboardMap\n  ) {\n    super();\n    this.tmSize = { width: 250, height: 200 };\n    this.positions = createPositionsTM(canvasSize, this.tmSize);\n    this.facing = facingENUM.RIGHT;\n    this.keyboardMap = keyboardMap;\n    this.health = 100;\n    this.points = 0;\n    this.healthBarPos = healthPos;\n    this.healthBarSize = { width: this.health, height: 30 };\n    this.pointsPosition = pointsPos;\n    this.pointsSize = { width: 30, height: 40 };\n\n    this.timbermanImage = new Image();\n    this.timbermanImage.src = timbermanSprites;\n\n    this.timbermanDeadImage = new Image();\n    this.timbermanDeadImage.src = timbermanRIPSprite;\n\n    this.timbermanStatus = TimbermanStatus.IDDLE;\n    this.animationCount = 0;\n\n    this.time = 0;\n  }\n\n  update(delta: number) {\n    // #region [ STATUS ]\n    if (this.timbermanStatus === TimbermanStatus.IDDLE) {\n      if (this.animationCount >= NUM_SPRITES) this.animationCount = 0;\n    }\n    // #endregion\n\n    // #region [ HEALTH]\n    if (this.health > 100)\n      // -- [ HEALTH ]\n      this.health = 100;\n    if (this.health < 0) this.health = 0;\n\n    this.health -= HEALTH_DECRESEASE_SPEED * delta;\n    // #endregion\n  }\n\n  draw(ctx: CanvasRenderingContext2D, delta: number) {\n    const curPosition: Position =\n      this.facing === facingENUM.LEFT ? this.positions[0] : this.positions[1];\n\n    ctx.save();\n\n    if (this.timbermanStatus === TimbermanStatus.DEAD) {\n      ctx.drawImage(\n        this.timbermanDeadImage,\n        curPosition.x,\n        curPosition.y,\n        this.tmSize.width / 2,\n        this.tmSize.height / 2\n      );\n    } else {\n      const tmStatus: string =\n        this.timbermanStatus === TimbermanStatus.IDDLE ? 'breath' : 'chop';\n\n      const animation: string = tmStatus + this.animationCount;\n\n      ctx.drawImage(\n        this.timbermanImage,\n        framesTimberman[animation].x,\n        framesTimberman[animation].y,\n        framesTimberman[animation].w,\n        framesTimberman[animation].h,\n        curPosition.x,\n        curPosition.y,\n        this.tmSize.width,\n        this.tmSize.height\n      );\n\n      this.time += delta;\n      this.animationCount =\n        Math.floor(this.time * NUM_SPRITES * 5) % NUM_SPRITES;\n    }\n\n    ctx.restore();\n  }\n\n  handleInputDOWN(key: string) {\n    const input = this.keyboardMap[key];\n\n    if (input === facingENUM.LEFT) {\n      this.timbermanStatus = TimbermanStatus.CHOP;\n\n      this.facing = facingENUM.LEFT;\n      this.health += HEALTH_INCRESEASE_SPEED * 0.2;\n      this.points++;\n    }\n\n    if (input === facingENUM.RIGHT) {\n      this.timbermanStatus = TimbermanStatus.CHOP;\n\n      this.facing = facingENUM.RIGHT;\n      this.health += HEALTH_INCRESEASE_SPEED * 0.2;\n      this.points++;\n    }\n  }\n\n  handleInputUP(key: string) {\n    const input = this.keyboardMap[key];\n\n    if (input === facingENUM.LEFT) this.timbermanStatus = TimbermanStatus.IDDLE;\n\n    if (input === facingENUM.RIGHT)\n      this.timbermanStatus = TimbermanStatus.IDDLE;\n  }\n}\n\nexport default Timberman;\n","import { facingENUM } from '../types/positions';\n\nexport interface KeyboardMap {\n  [key: string]: facingENUM;\n}\n\nexport const mapA: KeyboardMap = {\n  ArrowLeft: facingENUM.LEFT,\n  ArrowRight: facingENUM.RIGHT\n};\n\nexport const mapB: KeyboardMap = {\n  a: facingENUM.LEFT,\n  A: facingENUM.LEFT,\n  d: facingENUM.RIGHT,\n  D: facingENUM.RIGHT\n};\n","module.exports = require('./helpers/bundle-url').getBundleURL('ct2W2') + require('./helpers/bundle-manifest').resolve(\"hTO6R\");","module.exports = require('./helpers/bundle-url').getBundleURL('ct2W2') + require('./helpers/bundle-manifest').resolve(\"6gu66\");","module.exports = require('./helpers/bundle-url').getBundleURL('ct2W2') + require('./helpers/bundle-manifest').resolve(\"bNIP3\");","module.exports = require('./helpers/bundle-url').getBundleURL('ct2W2') + require('./helpers/bundle-manifest').resolve(\"jcPC9\");","import { Position, facingENUM } from '../types/positions';\nimport { Size } from '../types/sizes';\n\nconst LEFT_BRANCH_SPRITE = require('../../public/GameResources/img/branch1.png');\nconst RIGHT_BRANCH_SPRITE = require('../../public/GameResources/img/branch2.png');\nconst WOODEN_LOG_1_SPRITE = require('../../public/GameResources/img/trunk1.png');\nconst WOODEN_LOG_2_SPRITE = require('../../public/GameResources/img/trunk2.png');\n\nclass WoodenLog {\n  position: Position;\n\n  branchFacing: facingENUM;\n\n  wlSize: Size;\n\n  treeSprite: HTMLImageElement;\n\n  constructor(position: Position, wlSize: Size, branchFacing: facingENUM) {\n    this.position = position;\n    this.wlSize = wlSize;\n    this.branchFacing = branchFacing;\n\n    this.treeSprite = new Image();\n    if (this.branchFacing === facingENUM.LEFT)\n      this.treeSprite.src = LEFT_BRANCH_SPRITE;\n\n    if (this.branchFacing === facingENUM.RIGHT)\n      this.treeSprite.src = RIGHT_BRANCH_SPRITE;\n\n    if (this.branchFacing === facingENUM.NONE) {\n      const randTrunk = Math.floor(Math.random() * 2) + 1;\n      this.treeSprite.src =\n        randTrunk === 1 ? WOODEN_LOG_1_SPRITE : WOODEN_LOG_2_SPRITE;\n    }\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    // -- Render Wooden Log\n    ctx.save();\n\n    ctx.drawImage(\n      this.treeSprite,\n      this.position.x,\n      this.position.y,\n      this.wlSize.width,\n      this.wlSize.height\n    );\n\n    ctx.restore();\n  }\n}\n\nexport default WoodenLog;\n","module.exports = require('./helpers/bundle-url').getBundleURL('ct2W2') + require('./helpers/bundle-manifest').resolve(\"eBVmE\");","import { mapManager } from '../managers/MapManager';\nimport { facingENUM, Position } from '../types/positions';\nimport { Size } from '../types/sizes';\nimport { KeyboardMap } from '../utils/keyboard-map';\nimport Actor from './Actor';\nimport WoodenLog from './WoodenLog';\n\nconst STUMP_SPRITE = require('../../public/GameResources/img/stump.png');\n\nconst margin: Size = { width: 18, height: 120 };\nconst marginWL: Size = { width: 20, height: 180 };\nconst wlSize: Size = { width: 460, height: 140 };\n\nconst getBranchPosition = (lastLog: WoodenLog): facingENUM => {\n  if (lastLog.branchFacing === facingENUM.LEFT) {\n    const rand = Math.floor(Math.random() * 3) + 1;\n    if (rand !== 1 && rand !== 2) return facingENUM.LEFT;\n  }\n\n  if (lastLog.branchFacing === facingENUM.RIGHT) {\n    const rand = Math.floor(Math.random() * 3) + 1;\n    if (rand !== 1 && rand !== 2) return facingENUM.RIGHT;\n  }\n\n  if (lastLog.branchFacing === facingENUM.NONE) {\n    const rand = Math.floor(Math.random() * 7) + 1;\n    if (rand === 1 || rand === 3 || rand === 5) return facingENUM.LEFT;\n    if (rand === 2 || rand === 4 || rand === 6) return facingENUM.RIGHT;\n  }\n\n  return facingENUM.NONE;\n};\n\nconst initWoodenLogs = (\n  canvas: Size,\n  firstLogSize: Size,\n  numLogs: number = 10\n): Array<WoodenLog> => {\n  const tree: Array<WoodenLog> = [];\n\n  const middlePosPoint =\n    mapManager.points[2].start + mapManager.pointsWidth / 2;\n\n  // -- Create first wooden log\n  const wlPos1: Position = {\n    x: middlePosPoint - marginWL.width - wlSize.width / 2,\n    y: canvas.height - (marginWL.height + firstLogSize.height)\n  };\n  tree.push(new WoodenLog(wlPos1, wlSize, facingENUM.LEFT));\n\n  // -- Fill the array *Start at 1 cause we manually filled the first one*\n  for (let i = 1; i < numLogs; i++) {\n    // -- Wooden Log Position\n    const wlPos: Position = {\n      x: middlePosPoint - marginWL.width - wlSize.width / 2,\n      y:\n        canvas.height -\n        (marginWL.height + firstLogSize.height) -\n        i * wlSize.height\n    };\n\n    // -- Branch Direction\n    const branchFacing = getBranchPosition(tree[i - 1]);\n\n    // -- Add the new wooden log to the tree\n    tree.push(new WoodenLog(wlPos, wlSize, branchFacing));\n  }\n\n  return tree;\n};\n\nclass Tree extends Actor {\n  woodenLogs: Array<WoodenLog>;\n\n  keyboardMap: KeyboardMap;\n\n  firstLogSize: Size;\n\n  firstLogPos: Position;\n\n  firstLogSprite: HTMLImageElement;\n\n  constructor(canvas: Size, keyboardMap: KeyboardMap, numLogs: number = 10) {\n    super();\n    this.firstLogSize = { width: 180, height: 80 };\n    const middlePosPoint =\n      mapManager.points[2].start + mapManager.pointsWidth / 2;\n\n    this.firstLogPos = {\n      x: middlePosPoint - margin.width - this.firstLogSize.width / 2,\n      y: mapManager.canvasSize.height - margin.height\n    };\n    this.firstLogSprite = new Image();\n    this.firstLogSprite.src = STUMP_SPRITE;\n\n    this.woodenLogs = initWoodenLogs(canvas, this.firstLogSize, numLogs);\n\n    this.keyboardMap = keyboardMap;\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    // -- Draw First Log\n    ctx.save();\n\n    ctx.drawImage(\n      this.firstLogSprite,\n      this.firstLogPos.x,\n      this.firstLogPos.y,\n      this.firstLogSize.width,\n      this.firstLogSize.height\n    );\n\n    ctx.restore();\n\n    // -- Draw Wooden Logs\n    this.woodenLogs.forEach((e) => e.draw(ctx));\n  }\n\n  handleInputDOWN(key: string) {\n    const input = this.keyboardMap[key];\n    if (input !== facingENUM.LEFT && input !== facingENUM.RIGHT) return;\n\n    // -- Remove First Element\n    this.woodenLogs.shift();\n\n    // -- Move all the [ Wooden Log ] Positions\n    this.woodenLogs.forEach((wl) => {\n      wl.position.y += wl.wlSize.height;\n    });\n\n    // -- Add new [ Wooden Log ] to the tree at the last position\n    const middlePosPoint =\n      mapManager.points[2].start + mapManager.pointsWidth / 2;\n\n    const wlPos: Position = {\n      x: middlePosPoint - marginWL.width - wlSize.width / 2,\n      y:\n        mapManager.canvasSize.height -\n        (marginWL.height + this.firstLogSize.height) -\n        9 * wlSize.height\n    };\n\n    // -- Branch Direction\n    const branchFacing = getBranchPosition(\n      this.woodenLogs[this.woodenLogs.length - 1]\n    );\n\n    this.woodenLogs.push(new WoodenLog(wlPos, wlSize, branchFacing));\n  }\n}\n\nexport default Tree;\n","import { Position } from '../types/positions';\nimport Actor from './Actor';\n\nclass FPSViewer extends Actor {\n  position: Position;\n\n  constructor(position: Position) {\n    super();\n    this.position = position;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, delta: number) {\n    const fps = (1 / delta).toFixed(2);\n    ctx.font = '15px Arial';\n    ctx.fillStyle = 'black';\n    ctx.fillText(`FPS:${fps}`, this.position.x, this.position.y);\n  }\n}\n\nexport default FPSViewer;\n","import { mapManager, initMapManager } from './managers/MapManager';\nimport { gameManager, initGameManager } from './managers/GameManager';\nimport Timberman from './actors/Timberman';\nimport { mapA } from './utils/keyboard-map';\nimport Tree from './actors/Tree';\nimport { Size } from './types/sizes';\nimport Actor from './actors/Actor';\nimport { Player } from './types/player';\nimport FPSViewer from './actors/FPSviewer';\n\nwindow.onload = () => {\n  const canvas = document.getElementById('canvas-game') as HTMLCanvasElement;\n  const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n  const canvasSize: Size = { width: canvas.width, height: canvas.height };\n\n  // [ Init Managers ]\n  initMapManager(canvasSize);\n\n  // #region [ Init Actors ]\n\n  // -- FPS Viewer\n  const FPSviewer: FPSViewer = new FPSViewer({ x: 50, y: 50 });\n\n  // -- Timberman\n  const timberman: Timberman = new Timberman(\n    canvasSize,\n    { x: 50, y: 100 }, // Health Bar Position\n    { x: 50, y: 145 }, // Points Position\n    mapA\n  );\n\n  // -- Wooden Tree\n  const tree: Tree = new Tree(canvasSize, mapA, 10);\n  // #endregion\n\n  const actors: Array<Actor> = [FPSviewer, timberman, tree];\n\n  // [ Init Game Manager ]\n  const players: Array<Player> = [\n    { timberman, tree, keyboardMap: mapA }\n    // { timberman2, tree2, keyboardMap: mapB }, // -- In case you want to add another player\n  ];\n  initGameManager(players);\n\n  // -- Render Loop\n  let lastFrame = 0;\n  const render = (time: number): void => {\n    // -- Get Delta\n    const delta = (time - lastFrame) / 1000;\n    lastFrame = time;\n\n    // -- Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // -- Draw Background\n    mapManager.draw(ctx);\n\n    if (gameManager.isPlaying) {\n      // -- Draw Actors Info\n      gameManager.draw(ctx);\n\n      // -- Actors Actions\n      actors.forEach((actor) => {\n        // -- Draw Section\n        actor.draw(ctx, delta);\n\n        // -- Update Player Health\n        actor.update(delta);\n      });\n\n      // -- Check players positions\n      gameManager.update();\n    } else {\n      // -- Game Over Message\n      ctx.font = '15px Arial';\n      ctx.fillStyle = 'black';\n      ctx.fillText(\n        `Game Over...`,\n        canvasSize.width / 2 - 50,\n        canvasSize.height / 2 - 25\n      );\n    }\n\n    // -- Recurisve\n    window.requestAnimationFrame(render);\n  };\n\n  // -- Start the game\n  window.requestAnimationFrame(render);\n\n  // -- Add Event Listeners\n  document.body.addEventListener('keydown', (event) => {\n    if (gameManager.isPlaying) {\n      actors.forEach((actor) => actor.handleInputDOWN(event.key));\n    }\n  });\n\n  document.body.addEventListener('keyup', (event) => {\n    if (gameManager.isPlaying) {\n      actors.forEach((actor) => actor.handleInputUP(event.key));\n    }\n  });\n};\n"],"names":["$8b4d1930797b255e$export$6503ec6e8aabbaf","$8b4d1930797b255e$export$f7ad0328861e2f03","$8b4d1930797b255e$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$f29cd6c67ea13581$export$bdfd709ae4826697","$f29cd6c67ea13581$var$bundleURL","$f29cd6c67ea13581$var$getBaseURL","url","replace","value","err","matches","stack","match","$f29cd6c67ea13581$var$getBundleURL","$591730b6a5fd8289$exports","getBundleURL","resolve","$b76e4b56ecbb8faf$var$MapManager","canvasSize1","this","canvasSize","pointsWidth","width","pointsHelper","start","end","push","$b76e4b56ecbb8faf$var$getPointsArray","points","backgroundImg","Image","src","draw","ctx","drawImage","height","$b76e4b56ecbb8faf$export$fef8b6f15112b2ca","$bdfd4ec0ff3277d0$export$bf957bc552d5aae1","number0","x","y","w","h","number1","number2","number3","number4","number5","number6","number7","number8","number9","$bdfd4ec0ff3277d0$export$e4b2aa312f39627e","breath0","breath1","chop0","chop1","$cca09e8689b00f37$exports","$ef5e44257fdce7da$var$GameManager","players1","isPlaying","players","pointsImage","update","forEach","player","timberman","health","facing","tree","woodenLogs","branchFacing","save","fillStyle","fillRect","healthBarPos","healthBarSize","restore","toString","split","e","index","curNumber","pointsPosition","pointsSize","$ef5e44257fdce7da$export$ab06c38123110f1f","facingENUM","$a6845bf1f59e284a$export$7ce44a5e993f42ea","TimbermanStatus","$8235678231353d24$export$2e2bcd8739ae039","delta","delta1","handleInputDOWN","key","handleInputUP","key1","$4712e73920d94629$export$99b633ad0ec83e04","$8fef915a3d75bccc$exports","$9023aff859b2180e$exports","$8aa3bd67dcb811a8$export$2e2bcd8739ae039","healthPos","pointsPos","keyboardMap","super","tmSize","positions","canvas","middlePosPoint","tmPosLeft","$8aa3bd67dcb811a8$var$createPositionsTM","RIGHT","timbermanImage","timbermanDeadImage","timbermanStatus","IDDLE","animationCount","time","curPosition","LEFT","DEAD","animation","Math","floor","input","CHOP","$6f5fc56be7ebde6b$export$b876a215b1634849","ArrowLeft","ArrowRight","$f60b990ce3299b1d$exports","$273284489b6c564f$exports","$ae9986b0f158c4d2$exports","$56df4a35e0626f87$exports","$0221a8df29792366$export$2e2bcd8739ae039","position","wlSize","treeSprite","NONE","randTrunk","random","$36a810bddeda1fa6$exports","$ee9bfff312bfbe00$var$margin","$ee9bfff312bfbe00$var$marginWL","$ee9bfff312bfbe00$var$wlSize","$ee9bfff312bfbe00$var$getBranchPosition","lastLog","rand","$ee9bfff312bfbe00$export$2e2bcd8739ae039","numLogs","firstLogSize","firstLogPos","firstLogSprite","wlPos1","wlPos","$ee9bfff312bfbe00$var$initWoodenLogs","shift","wl","$686b1df20744f34f$export$2e2bcd8739ae039","fps","toFixed","font","fillText","window","onload","document","getElementById","getContext","$b76e4b56ecbb8faf$export$5b9231e05761732a","FPSviewer","actors","$ef5e44257fdce7da$export$59c269ab1c60136c","lastFrame","render","clearRect","actor","requestAnimationFrame","body","addEventListener","event"],"version":3,"file":"index.7a5a5380.js.map"}