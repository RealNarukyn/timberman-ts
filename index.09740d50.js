class t{constructor(t){this.canvasSize=t,this.pointsWidth=t.width/5;const i=(t=>{const i=[];let s=0;for(let h=0;h<5;h++){const h=s+t;i.push({start:s,end:h}),s+=t}return i})(this.pointsWidth);this.points=i}}let i;var s,h;(h=s||(s={}))[h.LEFT=0]="LEFT",h[h.RIGHT=1]="RIGHT";var e=class{update(){}draw(t){}handleInputDOWN(t){}};var o=class extends e{constructor(t,h){super(),this.tmSize={width:100,height:100},this.positions=((t,s)=>{let h=i.points[1].start+i.pointsWidth/2;const e={x:h-s.width/2,y:t.height-150};return h=i.points[3].start+i.pointsWidth/2,[e,{x:h-s.width/2,y:t.height-150}]})(t,this.tmSize),this.facing=s.RIGHT,this.keyboardMap=h}draw(t){t.save(),t.fillStyle="red";const i=this.facing===s.LEFT?this.positions[0]:this.positions[1];t.fillRect(i.x,i.y,this.tmSize.width,this.tmSize.height),t.restore()}handleInputDOWN(t){const i=this.keyboardMap[t];i===s.LEFT&&(this.facing=s.LEFT),i===s.RIGHT&&(this.facing=s.RIGHT)}};const n={ArrowLeft:s.LEFT,ArrowRight:s.RIGHT};s.LEFT,s.LEFT,s.RIGHT,s.RIGHT;var r=class{constructor(t,i,h=!1){if(this.position=t,this.wlSize=i,h)this.branch=s.LEFT;else{const t=Math.floor(2*Math.random())+1;this.branch=1===t?s.LEFT:s.RIGHT}this.branchSize={width:100,height:30}}draw(t){t.save(),t.fillStyle="blue",t.fillRect(this.position.x,this.position.y,this.wlSize.width,this.wlSize.height),t.restore(),t.save(),t.fillStyle="green";const i=this.branch===s.LEFT?this.position.x-this.branchSize.width:this.position.x+this.branchSize.width;t.fillRect(i,this.position.y,this.branchSize.width,this.branchSize.height),t.restore()}};var a=class extends e{constructor(t,s,h=10){super(),this.woodenLogs=((t,s=10)=>{const h=[];for(let e=0;e<s;e++){const s={width:100,height:100},o={x:i.points[2].start+i.pointsWidth/2-s.width/2,y:t.height-150-105*e};h.push(new r(o,s,0===e))}return h})(t,h),this.keyboardMap=s}draw(t){this.woodenLogs.forEach((i=>i.draw(t)))}handleInputDOWN(t){const h=this.keyboardMap[t];if(h===s.LEFT||h===s.RIGHT){this.woodenLogs.shift(),this.woodenLogs.forEach((t=>{t.position.y+=t.wlSize.height+5}));const t={width:100,height:100},s={x:i.points[2].start+i.pointsWidth/2-t.width/2,y:i.canvasSize.height-150-945};this.woodenLogs.push(new r(s,t))}}};window.onload=()=>{const s=document.getElementById("canvas-game"),h=s.getContext("2d"),e={width:s.width,height:s.height};((s={width:800,height:900})=>{i=new t(s)})(e);const r=[new o(e,n),new a(e,n,10)];let d=0;const c=t=>{const e=(t-d)/1e3;d=t,console.log(e),h.clearRect(0,0,s.width,s.height),i.points.forEach((t=>{h.save(),h.fillStyle="red",h.fillRect(t.start,s.height/2,t.end-t.start-1,100),h.restore()})),r.forEach((t=>t.draw(h))),window.requestAnimationFrame(c)};window.requestAnimationFrame(c),document.body.addEventListener("keydown",(t=>{r.forEach((i=>i.handleInputDOWN(t.key)))}))};
//# sourceMappingURL=index.09740d50.js.map
